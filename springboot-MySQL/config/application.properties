# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
# DEV
# spring.datasource.url = jdbc:informix-sqli://pfsbedev2:6007/admd:INFORMIXSERVER=pfsbedev2_1
# QA
# spring.datasource.url = jdbc:informix-sqli://pfsbeqa1:6010/admq:INFORMIXSERVER=pfsbeqa1_1
# LNX UAT
# spring.datasource.url = jdbc:informix-sqli://pbijcyvmludb01.pfs.local:8647/admq:INFORMIXSERVER=pfsbeuat01_1
# PROD
# spring.datasource.url = jdbc:informix-sqli://pfscsprod1:6121/admp:INFORMIXSERVER=pfscsprod1_1
# Eric DB - new lnx prod CS 
#spring.datasource.url = jdbc:informix-sqli://onyxcsprod1.pfs.local:8658/eric:INFORMIXSERVER=pfscsprod2_1;IFX_USE_STRENC=true;DB_LOCALE=en_us.57372;useUnicode=yes&characterEncoding=UTF-8
#spring.datasource.url = jdbc:informix-sqli://onyxcsprod1.pfs.local:8658/eric:INFORMIXSERVER=pfscsprod2_1;IFX_USE_STRENC=true;CLIENT_LOCALE=fr_ca.57372;DB_LOCALE=fr_ca.57372;useUnicode=yes&characterEncoding=UTF-8
spring.datasource.url = jdbc:mysql://localhost:3306/mydb
spring.datasource.username=wwang
spring.datasource.password=ENC(oN+TNWVE+I8x7CeZO0wQNMPxHYKzp9ib)
spring.datasource.packagesToScan=com.wwsoft.mysql

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.datasource.showsql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy 
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Must use the following naming strategy,
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!! otherwise, the name attribute in @Column annotation 
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!! is ignored, and hibernate add a underscore to column
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!! name, for example, firstName would be first_name in
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!! hibernate generated query.
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.datasource.dialect = org.hibernate.dialect.InformixDialect